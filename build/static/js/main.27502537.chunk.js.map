{"version":3,"sources":["components/shared/Wrapper.jsx","components/store/reducer.js","components/store/actionCreators.js","components/InfoForm.jsx","components/PayslipTable.jsx","store/reducer.js","store/index.js","App.js","index.js"],"names":["Wrapper","styled","div","defaultState","fromJS","formData","firstName","lastName","salary","superRate","tableData","name","Value","value","payPeriod","payFrequency","annualIncome","grossIncome","incomeTax","netIncome","super","pay","validated","Complete","formValidate","type","changeInputValue","key","formSubmit","validateComplete","validateIncomplete","triggerBack","postTable","dispatch","axios","post","then","res","console","log","ToastsStore","success","data","catch","err","response","status","error","StyledInfoForm","InfoForm","this","props","validate","handleValidate","handleSubmit","handleInputChange","to","Form","noValidate","onSubmit","event","Row","Group","as","Col","md","controlId","Label","Control","required","get","placeholder","onChange","Feedback","InputGroup","Prepend","Text","id","step","aria-describedby","min","max","Button","Component","connect","state","getIn","currentTarget","checkValidity","window","preventDefault","stopPropagation","actionCreators","target","StyledWrapper","PayrollTable","handleOnClick","handleBack","className","Table","striped","bordered","hover","dateFormat","displayType","thousandSeparator","prefix","renderText","onClick","reducer","combineReducers","form","action","set","setIn","Salary","Number","SuperRate","TaxCalculation","NP","round","divide","times","GrossIncome","Tax","NetIncome","Super","Pay","minus","moment","date","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PayRoll","path","exact","component","PayslipTable","position","ToastsContainerPosition","TOP_CENTER","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.27502537.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nexport default Wrapper;","import * as constants from './constants';\nimport NP from 'number-precision'\nimport { fromJS } from 'immutable';\nimport moment from 'moment'\nconst defaultState = fromJS({\n    formData: {\n        firstName: \"\",\n        lastName: \"\",\n        salary: \"\",\n        superRate: \"\",\n    },\n    tableData: {\n        firstName: {\n            name: 'First Name',\n            Value: ''\n        },\n        lastName: {\n            name: 'Last Name',\n            value: ''\n        },\n        payPeriod: {\n            name: 'Pay Period',\n            value: ''\n        },\n        payFrequency: {\n            name: 'Pay Frequency',\n            value: 'Monthly'\n        },\n        annualIncome: {\n            name: 'Annual Income',\n            value: ''\n        },\n        grossIncome: {\n            name: 'Gross Income',\n            value: ''\n        },\n        incomeTax: {\n            name: 'Income Tax',\n            value: ''\n        },\n        netIncome: {\n            name: 'Net Income',\n            value: ''\n        },\n        super: {\n            name: 'super',\n            value: ''\n        },\n        pay: {\n            name: 'Pay',\n            value: ''\n        },\n    },\n    validated: false,\n    Complete: false\n})\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case ('formValidate'):\n            return state.set('validated', true)\n        case ('changeInputValue'):\n            return state.setIn(['formData', action.key], action.value)\n        case ('validateComplete'):\n            return state.set(\"Complete\", true)\n        case ('validateIncomplete'):\n            return state.set(\"Complete\", false)\n        case ('triggerBack'):\n            return state.set(\"Complete\", false)\n        case ('clearFormBack'):\n            return state.set(\"Complete\", false)\n                .setIn([\"formData\", \"firstName\"], '')\n                .setIn([\"formData\", \"lastName\"], '')\n                .setIn([\"formData\", \"salary\"], '')\n                .setIn([\"formData\", \"superRate\"], '')\n        case ('formSubmit'):\n            let Salary = Number(action.formData.get('salary'));\n            let SuperRate = Number(action.formData.get('superRate'));\n            const TaxCalculation = (Salary) => {\n                let tax;\n                if (Salary <= 18200) {\n                    tax = 0;\n                    return tax\n                } else if (Salary >= 18201 && Salary <= 37000) {\n                    tax = NP.round(NP.divide(NP.times(Salary - 18200, 0.19), 12), 0)\n                    return tax\n                } else if (Salary >= 37001 && Salary <= 87000) {\n                    tax = NP.round(NP.divide(3572 + NP.times(Salary - 37000, 0.325), 12), 0)\n                    return tax\n                } else if (Salary >= 87001 && Salary <= 180000) {\n                    tax = NP.round(NP.divide(19822 + NP.times(Salary - 87000, 0.37), 12), 0)\n                    return tax\n                } else if (Salary >= 180001) {\n                    tax = NP.round(NP.divide(54232 + NP.times(Salary - 180000, 0.45), 12), 0)\n                    return tax\n                }\n            }\n\n            let GrossIncome = fromJS(NP.round(Salary / 12, 0))\n            let Tax = fromJS(TaxCalculation(Salary))\n            let NetIncome = fromJS(GrossIncome - Tax)\n            let Super = fromJS(NP.round(NP.times(GrossIncome, NP.times(SuperRate, 0.01)), 0))\n            let Pay = fromJS(NP.minus(NetIncome, Super))\n\n            return (\n                state.setIn(['tableData', 'firstName', 'value'], action.formData.get('firstName'))\n                    .setIn(['tableData', 'lastName', 'value'], action.formData.get('lastName'))\n                    .setIn(['tableData', 'annualIncome', 'value'], action.formData.get('salary'))\n                    .setIn(['tableData', 'payPeriod', 'value'], moment().date(28))\n                    .setIn(['tableData', 'grossIncome', 'value'], GrossIncome)\n                    .setIn(['tableData', 'incomeTax', 'value'], Tax)\n                    .setIn(['tableData', 'netIncome', 'value'], NetIncome)\n                    .setIn(['tableData', 'super', 'value'], Super)\n                    .setIn(['tableData', 'pay', 'value'], Pay)\n            )\n        default:\n            return state;\n    }\n}\n\n","import * as constants from './constants';\nimport { fromJS } from 'immutable';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios'\nimport { ToastsStore } from 'react-toasts';\n\nexport const formValidate = () => ({\n    type: 'formValidate'\n})\n\nexport const changeInputValue = (key, value) => ({\n    type: 'changeInputValue',\n    key,\n    value: fromJS(value)\n})\n\nexport const formSubmit = (formData) => ({\n    type: 'formSubmit',\n    formData\n})\n\nexport const validateComplete = () => ({\n    type: 'validateComplete'\n})\n\nexport const validateIncomplete = () => ({\n    type: 'validateIncomplete'\n})\n\nexport const triggerBack = () => ({\n    type: 'triggerBack'\n})\nconst clearFormBack = ()=>({\n    type: 'clearFormBack'\n})\nexport const postTable = (tableData) => {\n    return (dispatch) => {\n        axios.post('/payslip/post', {\n            tableData: tableData\n        }).then((res) => {\n            console.log(res)\n            ToastsStore.success(res.data)\n            dispatch(clearFormBack())\n\n        }).catch((err) => {\n            if (err.response.status == 400) {\n                ToastsStore.error(err.response.data)\n            }\n            if(err.response.status == 500){\n                ToastsStore.error(\"Database or server is not runing properly\")\n\n            }\n\n        })\n\n    }\n\n\n}\n\n\n","import React, { Component, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./shared/Wrapper\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"./store\";\nimport { Form, Col, InputGroup, Button } from \"react-bootstrap\";\n\nconst StyledInfoForm = styled(Wrapper)`\n    padding: 2rem 3rem;\n    border-radius: 1rem;\n    text-align: center;\n    margin-top: 100px\n    display: grid;\n    align-items: center;\n    justify-content: center;\n`;\nclass InfoForm extends Component {\n  render() {\n    const {\n      validate,\n      formData,\n      validateComplete,\n      handleValidate,\n      handleSubmit,\n      handleInputChange\n    } = this.props;\n    {\n      if (validateComplete) {\n        return <Redirect to=\"payslip\" />;\n      }\n    }\n    return (\n      <StyledInfoForm>\n        <h1>Employee Information</h1>\n        <Form\n          noValidate\n          validated={validate}\n          onSubmit={event => {\n            handleValidate(event);\n            handleSubmit(formData);\n          }}\n        >\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                value = {formData.get('firstName')}\n                placeholder=\"First name\"\n                onChange={handleInputChange(\"firstName\")}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid firstname！\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                value = {formData.get('lastName')}\n                placeholder=\"Last name\"\n                onChange={handleInputChange(\"lastName\")}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid lastname!\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n              <Form.Label>Salary</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                </InputGroup.Prepend>\n\n                <Form.Control\n                  type=\"number\"\n                  step=\"0.01\"\n                  placeholder=\"Salary\"\n                  value = {formData.get('salary')}\n                  onChange={handleInputChange(\"salary\")}\n                  aria-describedby=\"inputGroupPrepend\"\n                  aria-describedby=\"inputGroupApend\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a valid salary.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"6\" controlId=\"validationCustom04\">\n              <Form.Label>Super Rate</Form.Label>\n              <InputGroup >\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">%</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"100\"\n                  onChange={handleInputChange(\"superRate\")}\n                  value = {formData.get('superRate')}\n                  aria-describedby=\"inputGroupPrepend\"\n                  placeholder=\"Super Rate\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a valid super rate.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n          </Form.Row>\n          <Button type=\"submit\">Generate payslip</Button>\n        </Form>\n      </StyledInfoForm>\n    );\n  }\n}\nconst mapState = state => {\n  return {\n    validate: state.getIn([\"form\", \"validated\"]),\n    formData: state.getIn([\"form\", \"formData\"]),\n    validateComplete: state.getIn([\"form\", \"Complete\"])\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    handleValidate(event) {\n      const { currentTarget: form } = event;\n      if (form.checkValidity() === false) {\n        window.event.preventDefault();\n        event.stopPropagation();\n        dispatch(actionCreators.formValidate());\n        dispatch(actionCreators.validateIncomplete());\n      } else {\n        dispatch(actionCreators.validateComplete());\n      }\n    },\n    handleSubmit(formData) {\n      window.event.preventDefault();\n      dispatch(actionCreators.formSubmit(formData));\n    },\n    handleInputChange(key) {\n      return event => {\n        const {\n          target: { value }\n        } = event;\n        dispatch(actionCreators.changeInputValue(key, value));\n      };\n    }\n  };\n};\nexport default connect(\n  mapState,\n  mapDispatch\n)(InfoForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Wrapper from \"./shared/Wrapper\";\nimport styled from \"styled-components\";\nimport { Table, Button } from \"react-bootstrap\";\nimport dateFormat from \"dateformat\";\nimport NumberFormat from \"react-number-format\";\nimport { actionCreators } from \"./store\";\nconst StyledWrapper = styled(Wrapper)`\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr 1fr;\ntext-align: left;\nalign-items: center;\n.heading{\n    grid-column-start: 1; \n    grid-column-end: 5; \n}\n.back{\n    width: 120px\n}\n.pay{\n    grid-column-start: 4; \n    grid-column-end: 5; \n    width: 120px\n    align-items: right;\n}\n`;\n\nclass PayrollTable extends Component {\n  render() {\n    const {\n      tableData,\n      validateComplete,\n      handleOnClick,\n      handleBack\n    } = this.props;\n    if (validateComplete === false) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <StyledWrapper>\n        <h2 className=\"heading\">Payslip</h2>\n        <h3 className=\"heading\">\n          {tableData.getIn([\"firstName\", \"value\"])}{\" \"}\n          {tableData.getIn([\"lastName\", \"value\"])}{\" \"}\n        </h3>\n        <Table className=\"heading\" striped bordered hover>\n          <tbody>\n            <tr>\n              <th>{tableData.getIn([\"payPeriod\", \"name\"])}</th>\n              <td>\n                {dateFormat(\n                  tableData.getIn([\"payPeriod\", \"value\"]),\n                  \"dd-mmmm-yyyy\"\n                )}\n              </td>\n            </tr>\n            <tr>\n              <th>{tableData.getIn([\"payFrequency\", \"name\"])}</th>\n              <td> {tableData.getIn([\"payFrequency\", \"value\"])}</td>\n            </tr>\n            <tr>\n              <th>{tableData.getIn([\"annualIncome\", \"name\"])}</th>\n              <td>\n                <NumberFormat\n                  value={tableData.getIn([\"annualIncome\", \"value\"])}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  renderText={value => <div>{value}</div>}\n                ></NumberFormat>\n              </td>\n            </tr>\n            <tr>\n              <th>{tableData.getIn([\"grossIncome\", \"name\"])}</th>\n              <td>\n                <NumberFormat\n                  value={tableData.getIn([\"grossIncome\", \"value\"])}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  renderText={value => <div>{value}</div>}\n                ></NumberFormat>\n              </td>\n            </tr>\n            <tr>\n              <th>{tableData.getIn([\"incomeTax\", \"name\"])}</th>\n              <td>\n                <NumberFormat\n                  value={tableData.getIn([\"incomeTax\", \"value\"])}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  renderText={value => <div>{value}</div>}\n                ></NumberFormat>\n              </td>\n            </tr>\n            <tr>\n              <th>{tableData.getIn([\"netIncome\", \"name\"])}</th>\n              <td>\n                <NumberFormat\n                  value={tableData.getIn([\"netIncome\", \"value\"])}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  renderText={value => <div>{value}</div>}\n                ></NumberFormat>\n              </td>\n            </tr>\n            <tr>\n              <th>{tableData.getIn([\"super\", \"name\"])}</th>\n              <td>\n                <NumberFormat\n                  value={tableData.getIn([\"super\", \"value\"])}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  renderText={value => <div>{value}</div>}\n                ></NumberFormat>\n              </td>\n            </tr>\n            <tr>\n              <th>{tableData.getIn([\"pay\", \"name\"])}</th>\n              <td>\n                <NumberFormat\n                  value={tableData.getIn([\"pay\", \"value\"])}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                  renderText={value => <div>{value}</div>}\n                ></NumberFormat>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Link to=\"/\">\n          <Button className=\"back\" type=\"submit\" onClick={handleBack}>\n            Back\n          </Button>\n        </Link>\n        <Link to=\"/\" className=\"pay\">\n          <Button\n            className=\"pay\"\n            type=\"submit\"\n            onClick={() => handleOnClick(tableData)}\n          >\n            Pay\n          </Button>\n        </Link>\n      </StyledWrapper>\n    );\n  }\n}\nconst mapState = state => ({\n  tableData: state.getIn([\"form\", \"tableData\"]),\n  validateComplete: state.getIn([\"form\", \"Complete\"])\n});\n\nconst mapDispatch = dispatch => ({\n  handleOnClick(tableData) {\n    window.event.preventDefault();\n    dispatch(actionCreators.postTable(tableData));\n  },\n  handleBack() {\n    window.event.preventDefault();\n    dispatch(actionCreators.triggerBack());\n  }\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(PayrollTable);\n","import { combineReducers } from 'redux-immutable';\nimport { reducer as formReducer } from '../components/store'\nconst reducer = combineReducers({\n    form: formReducer\n})\n\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(\n\tapplyMiddleware(thunk)\n));\n\nexport default store;","import React, { Component, Fragment } from 'react';\nimport InfoForm from './components/InfoForm'\nimport PayslipTable from './components/PayslipTable'\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport store from './store'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nclass PayRoll extends Component {\n\n\n  render() {\n    return (\n      <Provider store={store}>\n\n        <BrowserRouter>\n          <Route path='/' exact component={InfoForm}></Route>\n          <Route path='/payslip' exact component={PayslipTable}></Route>\n        </BrowserRouter>\n        <ToastsContainer position={ ToastsContainerPosition.TOP_CENTER } store={ToastsStore} />\n      </Provider>\n\n    );\n  }\n}\n\nexport default PayRoll\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}